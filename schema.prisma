generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model diesel_schema_migrations {
  version String   @id @db.VarChar(50)
  run_on  DateTime @default(now()) @db.Timestamp(6)

  @@map("__diesel_schema_migrations")
}

model account_transactions {
  transaction_version BigInt
  account_address     String   @db.VarChar(66)
  inserted_at         DateTime @default(now()) @db.Timestamp(6)

  @@id([account_address, transaction_version])
  @@index([inserted_at], map: "at_insat_index")
  @@index([transaction_version(sort: Desc)], map: "at_version_index")
}

model ans_lookup {
  transaction_version    BigInt
  write_set_change_index BigInt
  domain                 String    @db.VarChar(64)
  subdomain              String    @db.VarChar(64)
  registered_address     String?   @db.VarChar(66)
  expiration_timestamp   DateTime? @db.Timestamp(6)
  token_name             String    @db.VarChar(140)
  is_deleted             Boolean
  inserted_at            DateTime  @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([inserted_at], map: "al_insat_index")
  @@index([token_name], map: "al_tn_index")
}

model ans_lookup_v2 {
  transaction_version         BigInt
  write_set_change_index      BigInt
  domain                      String    @db.VarChar(64)
  subdomain                   String    @db.VarChar(64)
  token_standard              String    @db.VarChar(10)
  registered_address          String?   @db.VarChar(66)
  expiration_timestamp        DateTime? @db.Timestamp(6)
  token_name                  String    @db.VarChar(140)
  is_deleted                  Boolean
  inserted_at                 DateTime  @default(now()) @db.Timestamp(6)
  subdomain_expiration_policy BigInt?

  @@id([transaction_version, write_set_change_index])
  @@index([inserted_at], map: "al_v2_insat_index")
  @@index([domain, subdomain, token_standard], map: "al_v2_name_index")
  @@index([registered_address], map: "al_v2_ra_index")
}

model ans_primary_name {
  transaction_version    BigInt
  write_set_change_index BigInt
  registered_address     String   @db.VarChar(66)
  domain                 String?  @db.VarChar(64)
  subdomain              String?  @db.VarChar(64)
  token_name             String?  @db.VarChar(140)
  is_deleted             Boolean
  inserted_at            DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([inserted_at], map: "apn_insat_index")
  @@index([token_name], map: "apn_tn_index")
}

model ans_primary_name_v2 {
  transaction_version    BigInt
  write_set_change_index BigInt
  registered_address     String   @db.VarChar(66)
  domain                 String?  @db.VarChar(64)
  subdomain              String?  @db.VarChar(64)
  token_standard         String   @db.VarChar(10)
  token_name             String?  @db.VarChar(140)
  is_deleted             Boolean
  inserted_at            DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([inserted_at], map: "apn_v2_insat_index")
  @@index([domain, subdomain, token_standard], map: "apn_v2_name_index")
  @@index([registered_address], map: "apn_v2_ra_index")
}

model block_metadata_transactions {
  version                     BigInt   @id
  block_height                BigInt   @unique
  id                          String   @db.VarChar(66)
  round                       BigInt
  epoch                       BigInt
  previous_block_votes_bitvec Json
  proposer                    String   @db.VarChar(66)
  failed_proposer_indices     Json
  timestamp                   DateTime @db.Timestamp(6)
  inserted_at                 DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "bmt_insat_index")
}

model coin_activities {
  transaction_version    BigInt
  event_account_address  String   @db.VarChar(66)
  event_creation_number  BigInt
  event_sequence_number  BigInt
  owner_address          String   @db.VarChar(66)
  coin_type              String   @db.VarChar(5000)
  amount                 Decimal  @db.Decimal
  activity_type          String   @db.VarChar(200)
  is_gas_fee             Boolean
  is_transaction_success Boolean
  entry_function_id_str  String?  @db.VarChar(1000)
  block_height           BigInt
  transaction_timestamp  DateTime @db.Timestamp(6)
  inserted_at            DateTime @default(now()) @db.Timestamp(6)
  event_index            BigInt?
  gas_fee_payer_address  String?  @db.VarChar(66)
  storage_refund_amount  Decimal  @default(0) @db.Decimal

  @@id([transaction_version, event_account_address, event_creation_number, event_sequence_number])
  @@index([coin_type, amount], map: "ca_ct_a_index")
  @@index([coin_type, activity_type, amount], map: "ca_ct_at_a_index")
  @@index([gas_fee_payer_address], map: "ca_gfpa_index")
  @@index([inserted_at], map: "ca_insat_index")
  @@index([owner_address, coin_type, activity_type, amount], map: "ca_oa_ct_at_index")
  @@index([owner_address, is_gas_fee], map: "ca_oa_igf_index")
}

model coin_balances {
  transaction_version   BigInt
  owner_address         String   @db.VarChar(66)
  coin_type_hash        String   @db.VarChar(64)
  coin_type             String   @db.VarChar(5000)
  amount                Decimal  @db.Decimal
  transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at           DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, owner_address, coin_type_hash])
  @@index([coin_type, amount], map: "cb_ct_a_index")
  @@index([inserted_at], map: "cb_insat_index")
  @@index([owner_address, coin_type], map: "cb_oa_ct_index")
  @@index([transaction_version, owner_address, coin_type], map: "cb_tv_oa_ct_index")
}

model coin_infos {
  coin_type_hash                 String   @id @db.VarChar(64)
  coin_type                      String   @db.VarChar(5000)
  transaction_version_created    BigInt
  creator_address                String   @db.VarChar(66)
  name                           String   @db.VarChar(32)
  symbol                         String   @db.VarChar(10)
  decimals                       Int
  transaction_created_timestamp  DateTime @db.Timestamp(6)
  inserted_at                    DateTime @default(now()) @db.Timestamp(6)
  supply_aggregator_table_handle String?  @db.VarChar(66)
  supply_aggregator_table_key    String?

  @@index([creator_address, name, symbol], map: "ci_ca_name_symbol_index")
  @@index([coin_type], map: "ci_ct_index")
  @@index([inserted_at], map: "ci_insat_index")
}

model coin_supply {
  transaction_version   BigInt
  coin_type_hash        String   @db.VarChar(64)
  coin_type             String   @db.VarChar(5000)
  supply                Decimal  @db.Decimal
  transaction_timestamp DateTime @db.Timestamp(6)
  transaction_epoch     BigInt
  inserted_at           DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, coin_type_hash])
  @@index([coin_type, transaction_version(sort: Desc)], map: "cs_ct_tv_index")
  @@index([transaction_epoch], map: "cs_epoch_index")
}

model collection_datas {
  collection_data_id_hash String   @db.VarChar(64)
  transaction_version     BigInt
  creator_address         String   @db.VarChar(66)
  collection_name         String   @db.VarChar(128)
  description             String
  metadata_uri            String   @db.VarChar(512)
  supply                  Decimal  @db.Decimal
  maximum                 Decimal  @db.Decimal
  maximum_mutable         Boolean
  uri_mutable             Boolean
  description_mutable     Boolean
  inserted_at             DateTime @default(now()) @db.Timestamp(6)
  table_handle            String   @db.VarChar(66)
  transaction_timestamp   DateTime @db.Timestamp(6)

  @@id([collection_data_id_hash, transaction_version])
  @@index([creator_address, collection_name], map: "cd_crea_cn_index")
  @@index([inserted_at], map: "cd_insat_index")
}

model collections_v2 {
  transaction_version    BigInt
  write_set_change_index BigInt
  collection_id          String   @db.VarChar(66)
  creator_address        String   @db.VarChar(66)
  collection_name        String   @db.VarChar(128)
  description            String
  uri                    String   @db.VarChar(512)
  current_supply         Decimal  @db.Decimal
  max_supply             Decimal? @db.Decimal
  total_minted_v2        Decimal? @db.Decimal
  mutable_description    Boolean?
  mutable_uri            Boolean?
  table_handle_v1        String?  @db.VarChar(66)
  token_standard         String   @db.VarChar(10)
  transaction_timestamp  DateTime @db.Timestamp(6)
  inserted_at            DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([creator_address, collection_name], map: "col2_crea_cn_index")
  @@index([collection_id], map: "col2_id_index")
  @@index([inserted_at], map: "col2_insat_index")
}

model current_ans_lookup {
  domain                   String   @db.VarChar(64)
  subdomain                String   @db.VarChar(64)
  registered_address       String?  @db.VarChar(66)
  expiration_timestamp     DateTime @db.Timestamp(6)
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)
  token_name               String   @default("") @db.VarChar(140)
  is_deleted               Boolean  @default(false)

  @@id([domain, subdomain])
  @@index([domain, subdomain, expiration_timestamp], map: "ans_d_s_et_index")
  @@index([expiration_timestamp], map: "ans_et_index")
  @@index([inserted_at], map: "ans_insat_index")
  @@index([registered_address, expiration_timestamp], map: "ans_ra_et_index")
  @@index([token_name], map: "ans_tn_index")
}

model current_ans_lookup_v2 {
  domain                      String   @db.VarChar(64)
  subdomain                   String   @db.VarChar(64)
  token_standard              String   @db.VarChar(10)
  token_name                  String?  @db.VarChar(140)
  registered_address          String?  @db.VarChar(66)
  expiration_timestamp        DateTime @db.Timestamp(6)
  last_transaction_version    BigInt
  is_deleted                  Boolean
  inserted_at                 DateTime @default(now()) @db.Timestamp(6)
  subdomain_expiration_policy BigInt?

  @@id([domain, subdomain, token_standard])
  @@index([expiration_timestamp], map: "ans_v2_et_index")
  @@index([inserted_at], map: "ans_v2_insat_index")
  @@index([registered_address], map: "ans_v2_ra_index")
  @@index([token_name, token_standard], map: "ans_v2_tn_index")
}

model current_ans_primary_name {
  registered_address       String   @id @db.VarChar(66)
  domain                   String?  @db.VarChar(64)
  subdomain                String?  @db.VarChar(64)
  token_name               String?  @db.VarChar(140)
  is_deleted               Boolean
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "capn_insat_index")
  @@index([token_name], map: "capn_tn_index")
}

model current_ans_primary_name_v2 {
  registered_address       String   @db.VarChar(66)
  token_standard           String   @db.VarChar(10)
  domain                   String?  @db.VarChar(64)
  subdomain                String?  @db.VarChar(64)
  token_name               String?  @db.VarChar(140)
  is_deleted               Boolean
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([registered_address, token_standard])
  @@index([inserted_at], map: "capn_v2_insat_index")
  @@index([token_name, token_standard], map: "capn_v2_tn_index")
}

model current_coin_balances {
  owner_address              String   @db.VarChar(66)
  coin_type_hash             String   @db.VarChar(64)
  coin_type                  String   @db.VarChar(5000)
  amount                     Decimal  @db.Decimal
  last_transaction_version   BigInt
  last_transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at                DateTime @default(now()) @db.Timestamp(6)

  @@id([owner_address, coin_type_hash])
  @@index([coin_type, amount], map: "ccb_ct_a_index")
  @@index([inserted_at], map: "ccb_insat_index")
  @@index([owner_address, coin_type], map: "ccb_oa_ct_index")
}

model current_collection_datas {
  collection_data_id_hash    String   @id @db.VarChar(64)
  creator_address            String   @db.VarChar(66)
  collection_name            String   @db.VarChar(128)
  description                String
  metadata_uri               String   @db.VarChar(512)
  supply                     Decimal  @db.Decimal
  maximum                    Decimal  @db.Decimal
  maximum_mutable            Boolean
  uri_mutable                Boolean
  description_mutable        Boolean
  last_transaction_version   BigInt
  inserted_at                DateTime @default(now()) @db.Timestamp(6)
  table_handle               String   @db.VarChar(66)
  last_transaction_timestamp DateTime @db.Timestamp(6)

  @@index([creator_address, collection_name], map: "curr_cd_crea_cn_index")
  @@index([inserted_at], map: "curr_cd_insat_index")
  @@index([table_handle], map: "curr_cd_th_index")
}

model current_collections_v2 {
  collection_id              String   @id @db.VarChar(66)
  creator_address            String   @db.VarChar(66)
  collection_name            String   @db.VarChar(128)
  description                String
  uri                        String   @db.VarChar(512)
  current_supply             Decimal  @db.Decimal
  max_supply                 Decimal? @db.Decimal
  total_minted_v2            Decimal? @db.Decimal
  mutable_description        Boolean?
  mutable_uri                Boolean?
  table_handle_v1            String?  @db.VarChar(66)
  token_standard             String   @db.VarChar(10)
  last_transaction_version   BigInt
  last_transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at                DateTime @default(now()) @db.Timestamp(6)

  @@index([creator_address, collection_name], map: "cur_col2_crea_cn_index")
  @@index([inserted_at], map: "cur_col2_insat_index")
}

model current_delegated_staking_pool_balances {
  staking_pool_address           String   @id @db.VarChar(66)
  total_coins                    Decimal  @db.Decimal
  total_shares                   Decimal  @db.Decimal
  last_transaction_version       BigInt
  inserted_at                    DateTime @default(now()) @db.Timestamp(6)
  operator_commission_percentage Decimal  @db.Decimal
  inactive_table_handle          String   @db.VarChar(66)
  active_table_handle            String   @db.VarChar(66)

  @@index([inactive_table_handle], map: "cdspb_inactive_index")
  @@index([inserted_at], map: "cdspb_insat_index")
}

model current_delegated_voter {
  delegation_pool_address    String   @db.VarChar(66)
  delegator_address          String   @db.VarChar(66)
  table_handle               String?  @db.VarChar(66)
  voter                      String?  @db.VarChar(66)
  pending_voter              String?  @db.VarChar(66)
  last_transaction_version   BigInt
  last_transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at                DateTime @default(now()) @db.Timestamp(6)

  @@id([delegation_pool_address, delegator_address])
  @@index([delegator_address], map: "cdv_da_index")
  @@index([inserted_at], map: "cdv_insat_index")
  @@index([pending_voter], map: "cdv_pv_index")
  @@index([table_handle], map: "cdv_th_index")
  @@index([voter], map: "cdv_v_index")
}

model current_delegator_balances {
  delegator_address        String   @db.VarChar(66)
  pool_address             String   @db.VarChar(66)
  pool_type                String   @db.VarChar(100)
  table_handle             String   @db.VarChar(66)
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)
  shares                   Decimal  @db.Decimal
  parent_table_handle      String   @db.VarChar(66)

  @@id([delegator_address, pool_address, pool_type, table_handle])
  @@index([inserted_at], map: "cdb_insat_index")
}

model current_fungible_asset_balances {
  storage_id                 String   @id @db.VarChar(66)
  owner_address              String   @db.VarChar(66)
  asset_type                 String   @db.VarChar(1000)
  is_primary                 Boolean
  is_frozen                  Boolean
  amount                     Decimal  @db.Decimal
  last_transaction_timestamp DateTime @db.Timestamp(6)
  last_transaction_version   BigInt
  token_standard             String   @db.VarChar(10)
  inserted_at                DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "cfab_insat_index")
  @@index([owner_address, asset_type], map: "cfab_owner_at_index")
}

model current_objects {
  object_address           String   @id @db.VarChar(66)
  owner_address            String   @db.VarChar(66)
  state_key_hash           String   @db.VarChar(66)
  allow_ungated_transfer   Boolean
  last_guid_creation_num   Decimal  @db.Decimal
  last_transaction_version BigInt
  is_deleted               Boolean
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "co_insat_idx")
  @@index([object_address, state_key_hash], map: "co_object_skh_idx")
  @@index([owner_address], map: "co_owner_idx")
  @@index([state_key_hash], map: "co_skh_idx")
}

model current_staking_pool_voter {
  staking_pool_address     String   @id @db.VarChar(66)
  voter_address            String   @db.VarChar(66)
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)
  operator_address         String   @db.VarChar(66)

  @@index([inserted_at], map: "ctpv_insat_index")
  @@index([voter_address], map: "ctpv_va_index")
}

model current_table_items {
  table_handle             String   @db.VarChar(66)
  key_hash                 String   @db.VarChar(64)
  key                      String
  decoded_key              Json
  decoded_value            Json?
  is_deleted               Boolean
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([table_handle, key_hash])
  @@index([inserted_at], map: "cti_insat_index")
}

model current_token_datas {
  token_data_id_hash         String   @id @db.VarChar(64)
  creator_address            String   @db.VarChar(66)
  collection_name            String   @db.VarChar(128)
  name                       String   @db.VarChar(128)
  maximum                    Decimal  @db.Decimal
  supply                     Decimal  @db.Decimal
  largest_property_version   Decimal  @db.Decimal
  metadata_uri               String   @db.VarChar(512)
  payee_address              String   @db.VarChar(66)
  royalty_points_numerator   Decimal  @db.Decimal
  royalty_points_denominator Decimal  @db.Decimal
  maximum_mutable            Boolean
  uri_mutable                Boolean
  description_mutable        Boolean
  properties_mutable         Boolean
  royalty_mutable            Boolean
  default_properties         Json
  last_transaction_version   BigInt
  inserted_at                DateTime @default(now()) @db.Timestamp(6)
  collection_data_id_hash    String   @db.VarChar(64)
  last_transaction_timestamp DateTime @db.Timestamp(6)
  description                String

  @@index([creator_address, collection_name, name], map: "curr_td_crea_cn_name_index")
  @@index([inserted_at], map: "curr_td_insat_index")
}

model current_token_datas_v2 {
  token_data_id               String   @id @db.VarChar(66)
  collection_id               String   @db.VarChar(66)
  token_name                  String   @db.VarChar(128)
  maximum                     Decimal? @db.Decimal
  supply                      Decimal  @db.Decimal
  largest_property_version_v1 Decimal? @db.Decimal
  token_uri                   String   @db.VarChar(512)
  description                 String
  token_properties            Json
  token_standard              String   @db.VarChar(10)
  is_fungible_v2              Boolean?
  last_transaction_version    BigInt
  last_transaction_timestamp  DateTime @db.Timestamp(6)
  inserted_at                 DateTime @default(now()) @db.Timestamp(6)
  decimals                    BigInt   @default(0)

  @@index([collection_id, token_name], map: "cur_td2_cid_name_index")
  @@index([inserted_at], map: "cur_td2_insat_index")
}

model current_token_ownerships {
  token_data_id_hash         String   @db.VarChar(64)
  property_version           Decimal  @db.Decimal
  owner_address              String   @db.VarChar(66)
  creator_address            String   @db.VarChar(66)
  collection_name            String   @db.VarChar(128)
  name                       String   @db.VarChar(128)
  amount                     Decimal  @db.Decimal
  token_properties           Json
  last_transaction_version   BigInt
  inserted_at                DateTime @default(now()) @db.Timestamp(6)
  collection_data_id_hash    String   @db.VarChar(64)
  table_type                 String
  last_transaction_timestamp DateTime @db.Timestamp(6)

  @@id([token_data_id_hash, property_version, owner_address])
  @@index([collection_data_id_hash, owner_address], map: "curr_to_collection_hash_owner_index")
  @@index([creator_address, collection_name, name], map: "curr_to_crea_cn_name_index")
  @@index([inserted_at], map: "curr_to_insat_index")
  @@index([owner_address, table_type, amount, last_transaction_version(sort: Desc)], map: "curr_to_oa_tt_am_ltv_index")
  @@index([owner_address, table_type, last_transaction_version(sort: Desc)], map: "curr_to_oa_tt_ltv_index")
  @@index([owner_address], map: "curr_to_owner_index")
  @@index([owner_address, table_type, amount], map: "curr_to_owner_tt_am_index")
}

model current_token_ownerships_v2 {
  token_data_id               String   @db.VarChar(66)
  property_version_v1         Decimal  @db.Decimal
  owner_address               String   @db.VarChar(66)
  storage_id                  String   @db.VarChar(66)
  amount                      Decimal  @db.Decimal
  table_type_v1               String?  @db.VarChar(66)
  token_properties_mutated_v1 Json?
  is_soulbound_v2             Boolean?
  token_standard              String   @db.VarChar(10)
  is_fungible_v2              Boolean?
  last_transaction_version    BigInt
  last_transaction_timestamp  DateTime @db.Timestamp(6)
  inserted_at                 DateTime @default(now()) @db.Timestamp(6)
  non_transferrable_by_owner  Boolean?

  @@id([token_data_id, property_version_v1, owner_address, storage_id])
  @@index([inserted_at], map: "curr_to2_insat_index")
  @@index([owner_address], map: "curr_to2_owner_index")
  @@index([storage_id], map: "curr_to2_wa_index")
}

model current_token_pending_claims {
  token_data_id_hash         String   @db.VarChar(64)
  property_version           Decimal  @db.Decimal
  from_address               String   @db.VarChar(66)
  to_address                 String   @db.VarChar(66)
  collection_data_id_hash    String   @db.VarChar(64)
  creator_address            String   @db.VarChar(66)
  collection_name            String   @db.VarChar(128)
  name                       String   @db.VarChar(128)
  amount                     Decimal  @db.Decimal
  table_handle               String   @db.VarChar(66)
  last_transaction_version   BigInt
  inserted_at                DateTime @default(now()) @db.Timestamp(6)
  last_transaction_timestamp DateTime @db.Timestamp(6)
  token_data_id              String   @default("") @db.VarChar(66)
  collection_id              String   @default("") @db.VarChar(66)

  @@id([token_data_id_hash, property_version, from_address, to_address])
  @@index([from_address, amount], map: "ctpc_from_am_index")
  @@index([inserted_at], map: "ctpc_insat_index")
  @@index([table_handle], map: "ctpc_th_index")
  @@index([to_address, amount], map: "ctpc_to_am_index")
}

model current_token_v2_metadata {
  object_address           String   @db.VarChar(66)
  resource_type            String   @db.VarChar(128)
  data                     Json
  state_key_hash           String   @db.VarChar(66)
  last_transaction_version BigInt
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([object_address, resource_type])
}

model delegated_staking_activities {
  transaction_version BigInt
  event_index         BigInt
  delegator_address   String   @db.VarChar(66)
  pool_address        String   @db.VarChar(66)
  event_type          String
  amount              Decimal  @db.Decimal
  inserted_at         DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, event_index])
  @@index([inserted_at], map: "dsa_insat_index")
  @@index([pool_address, delegator_address, transaction_version, event_index], map: "dsa_pa_da_index")
}

model delegated_staking_pool_balances {
  transaction_version            BigInt
  staking_pool_address           String   @db.VarChar(66)
  total_coins                    Decimal  @db.Decimal
  total_shares                   Decimal  @db.Decimal
  inserted_at                    DateTime @default(now()) @db.Timestamp(6)
  operator_commission_percentage Decimal  @db.Decimal
  inactive_table_handle          String   @db.VarChar(66)
  active_table_handle            String   @db.VarChar(66)

  @@id([transaction_version, staking_pool_address])
  @@index([inserted_at], map: "dspb_insat_index")
}

model delegated_staking_pools {
  staking_pool_address      String   @id @db.VarChar(66)
  first_transaction_version BigInt
  inserted_at               DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "dsp_insat_index")
}

model delegator_balances {
  transaction_version    BigInt
  write_set_change_index BigInt
  delegator_address      String   @db.VarChar(66)
  pool_address           String   @db.VarChar(66)
  pool_type              String   @db.VarChar(100)
  table_handle           String   @db.VarChar(66)
  shares                 Decimal  @db.Decimal
  parent_table_handle    String   @db.VarChar(66)
  inserted_at            DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([delegator_address], map: "db_da_index")
  @@index([inserted_at], map: "db_insat_index")
}

model event_size_info {
  transaction_version BigInt
  index               BigInt
  type_tag_bytes      BigInt
  total_bytes         BigInt
  inserted_at         DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, index])
  @@index([inserted_at], map: "esi_insat_index")
}

model events {
  sequence_number          BigInt
  creation_number          BigInt
  account_address          String   @db.VarChar(66)
  transaction_version      BigInt
  transaction_block_height BigInt
  type                     String
  data                     Json
  inserted_at              DateTime @default(now()) @db.Timestamp(6)
  event_index              BigInt
  indexed_type             String   @default("") @db.VarChar(300)

  @@id([transaction_version, event_index])
  @@index([account_address], map: "ev_addr_type_index")
  @@index([inserted_at], map: "ev_insat_index")
  @@index([indexed_type], map: "ev_itype_index")
}

model fungible_asset_activities {
  transaction_version    BigInt
  event_index            BigInt
  owner_address          String   @db.VarChar(66)
  storage_id             String   @db.VarChar(66)
  asset_type             String   @db.VarChar(1000)
  is_frozen              Boolean?
  amount                 Decimal? @db.Decimal
  type                   String   @db.VarChar
  is_gas_fee             Boolean
  gas_fee_payer_address  String?  @db.VarChar(66)
  is_transaction_success Boolean
  entry_function_id_str  String?  @db.VarChar(1000)
  block_height           BigInt
  token_standard         String   @db.VarChar(10)
  transaction_timestamp  DateTime @db.Timestamp(6)
  inserted_at            DateTime @default(now()) @db.Timestamp(6)
  storage_refund_amount  Decimal  @default(0) @db.Decimal

  @@id([transaction_version, event_index])
  @@index([asset_type], map: "faa_at_index")
  @@index([gas_fee_payer_address], map: "faa_gfpa_index")
  @@index([inserted_at], map: "faa_insat_idx")
  @@index([owner_address, type], map: "faa_owner_type_index")
  @@index([storage_id], map: "faa_si_index")
}

model fungible_asset_balances {
  transaction_version    BigInt
  write_set_change_index BigInt
  storage_id             String   @db.VarChar(66)
  owner_address          String   @db.VarChar(66)
  asset_type             String   @db.VarChar(1000)
  is_primary             Boolean
  is_frozen              Boolean
  amount                 Decimal  @db.Decimal
  transaction_timestamp  DateTime @db.Timestamp(6)
  token_standard         String   @db.VarChar(10)
  inserted_at            DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([inserted_at], map: "fab_insat_index")
  @@index([owner_address, asset_type], map: "fab_owner_at_index")
}

model fungible_asset_metadata {
  asset_type                        String   @id @db.VarChar(1000)
  creator_address                   String   @db.VarChar(66)
  name                              String   @db.VarChar(32)
  symbol                            String   @db.VarChar(10)
  decimals                          Int
  icon_uri                          String?  @db.VarChar(512)
  project_uri                       String?  @db.VarChar(512)
  last_transaction_version          BigInt
  last_transaction_timestamp        DateTime @db.Timestamp(6)
  supply_aggregator_table_handle_v1 String?  @db.VarChar(66)
  supply_aggregator_table_key_v1    String?
  token_standard                    String   @db.VarChar(10)
  inserted_at                       DateTime @default(now()) @db.Timestamp(6)
  is_token_v2                       Boolean?

  @@index([creator_address], map: "fam_creator_index")
  @@index([inserted_at], map: "fam_insat_index")
}

model gacha_trial {
  token_data_id    String   @id(map: "PK_db554c22abf8c07376601197193") @db.VarChar(66)
  txn_hash         String   @db.VarChar(66)
  txn_version      BigInt
  group            String   @db.VarChar(16)
  grade            String   @db.VarChar(16)
  name             String   @db.VarChar(32)
  item_minted      BigInt
  total_minted     BigInt
  inserted_at      DateTime @default(now()) @db.Timestamp(6)
  probability_set  String?  @db.VarChar(32)
  collection_id    String?  @db.VarChar(66)
  burn_txn_version BigInt?

  @@index([collection_id, inserted_at], map: "gacha_trial_collection_id_and_inserted_at")
  @@index([txn_hash], map: "gacha_trial_txn_hash_index")
}

model indexer_status {
  db            String   @id @db.VarChar(50)
  is_indexer_up Boolean
  inserted_at   DateTime @default(now()) @db.Timestamp(6)
}

model ledger_infos {
  chain_id BigInt @id
}

model move_modules {
  transaction_version      BigInt
  write_set_change_index   BigInt
  transaction_block_height BigInt
  name                     String
  address                  String   @db.VarChar(66)
  bytecode                 Bytes?
  friends                  Json?
  exposed_functions        Json?
  structs                  Json?
  is_deleted               Boolean
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([address, name, transaction_version], map: "mm_addr_name_ver_index")
  @@index([inserted_at], map: "mm_insat_index")
}

model move_resources {
  transaction_version      BigInt
  write_set_change_index   BigInt
  transaction_block_height BigInt
  name                     String
  address                  String   @db.VarChar(66)
  type                     String
  module                   String
  generic_type_params      Json?
  data                     Json?
  is_deleted               Boolean
  inserted_at              DateTime @default(now()) @db.Timestamp(6)
  state_key_hash           String   @default("") @db.VarChar(66)

  @@id([transaction_version, write_set_change_index])
  @@index([address, module, name, transaction_version], map: "mr_addr_mod_name_ver_index")
  @@index([inserted_at], map: "mr_insat_index")
  @@index([transaction_version(sort: Desc)], map: "mr_ver_index")
}

model nft_points {
  transaction_version   BigInt   @id
  owner_address         String   @db.VarChar(66)
  token_name            String
  point_type            String
  amount                Decimal  @db.Decimal
  transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at           DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "np_insat_idx")
  @@index([owner_address], map: "np_oa_idx")
  @@index([transaction_timestamp, owner_address], map: "np_tt_oa_idx")
}

model objects {
  transaction_version    BigInt
  write_set_change_index BigInt
  object_address         String   @db.VarChar(66)
  owner_address          String   @db.VarChar(66)
  state_key_hash         String   @db.VarChar(66)
  guid_creation_num      Decimal  @db.Decimal
  allow_ungated_transfer Boolean
  is_deleted             Boolean
  inserted_at            DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([inserted_at], map: "o_insat_idx")
  @@index([object_address, state_key_hash], map: "o_object_skh_idx")
  @@index([owner_address], map: "o_owner_idx")
  @@index([state_key_hash], map: "o_skh_idx")
}

model processor_status {
  processor                  String    @id @db.VarChar(50)
  last_success_version       BigInt
  last_updated               DateTime  @default(now()) @db.Timestamp(6)
  last_transaction_timestamp DateTime? @db.Timestamp(6)
}

model proposal_votes {
  transaction_version   BigInt
  proposal_id           BigInt
  voter_address         String   @db.VarChar(66)
  staking_pool_address  String   @db.VarChar(66)
  num_votes             Decimal  @db.Decimal
  should_pass           Boolean
  transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at           DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, proposal_id, voter_address])
  @@index([inserted_at], map: "pv_ia_index")
  @@index([proposal_id, voter_address], map: "pv_pi_va_index")
  @@index([staking_pool_address], map: "pv_spa_index")
  @@index([voter_address], map: "pv_va_index")
}

model signatures {
  transaction_version      BigInt
  multi_agent_index        BigInt
  multi_sig_index          BigInt
  transaction_block_height BigInt
  signer                   String   @db.VarChar(66)
  is_sender_primary        Boolean
  type                     String   @db.VarChar
  public_key               String   @db.VarChar(136)
  signature                String
  threshold                BigInt
  public_key_indices       Json
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, multi_agent_index, multi_sig_index, is_sender_primary])
  @@index([inserted_at], map: "sig_insat_index")
}

model spam_assets {
  asset        String   @id @db.VarChar(1100)
  is_spam      Boolean  @default(true)
  last_updated DateTime @default(now()) @db.Timestamp(6)
}

model svl_token_ownerships {
  collection_id    String   @db.VarChar(66)
  token_data_id    String   @id(map: "PK_svl_token_ownerships_token_data_id") @db.VarChar(66)
  owner_address    String   @db.VarChar(66)
  last_txn_version BigInt
  amount           BigInt
  inserted_at      DateTime @default(now()) @db.Timestamp(6)

  @@index([collection_id], map: "svl_token_ownerships_collection_id_index")
  @@index([owner_address], map: "svl_token_ownerships_owner_index")
}

model table_items {
  key                      String
  transaction_version      BigInt
  write_set_change_index   BigInt
  transaction_block_height BigInt
  table_handle             String   @db.VarChar(66)
  decoded_key              Json
  decoded_value            Json?
  is_deleted               Boolean
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, write_set_change_index])
  @@index([table_handle, transaction_version], map: "ti_hand_ver_key_index")
  @@index([inserted_at], map: "ti_insat_index")
}

model table_metadatas {
  handle      String   @id @db.VarChar(66)
  key_type    String
  value_type  String
  inserted_at DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "tm_insat_index")
}

model token_activities {
  transaction_version     BigInt
  event_account_address   String   @db.VarChar(66)
  event_creation_number   BigInt
  event_sequence_number   BigInt
  collection_data_id_hash String   @db.VarChar(64)
  token_data_id_hash      String   @db.VarChar(64)
  property_version        Decimal  @db.Decimal
  creator_address         String   @db.VarChar(66)
  collection_name         String   @db.VarChar(128)
  name                    String   @db.VarChar(128)
  transfer_type           String   @db.VarChar(50)
  from_address            String?  @db.VarChar(66)
  to_address              String?  @db.VarChar(66)
  token_amount            Decimal  @db.Decimal
  coin_type               String?
  coin_amount             Decimal? @db.Decimal
  inserted_at             DateTime @default(now()) @db.Timestamp(6)
  transaction_timestamp   DateTime @db.Timestamp(6)
  event_index             BigInt?

  @@id([transaction_version, event_account_address, event_creation_number, event_sequence_number])
  @@index([creator_address, collection_name, name, property_version], map: "ta_addr_coll_name_pv_index")
  @@index([from_address, transfer_type], map: "ta_from_ttyp_index")
  @@index([inserted_at], map: "ta_insat_index")
  @@index([token_data_id_hash, property_version], map: "ta_tdih_pv_index")
  @@index([to_address, transfer_type], map: "ta_to_ttyp_index")
  @@index([transaction_version], map: "ta_version_index")
}

model token_activities_v2 {
  transaction_version   BigInt
  event_index           BigInt
  event_account_address String   @db.VarChar(66)
  token_data_id         String   @db.VarChar(66)
  property_version_v1   Decimal  @db.Decimal
  type                  String   @db.VarChar
  from_address          String?  @db.VarChar(66)
  to_address            String?  @db.VarChar(66)
  token_amount          Decimal  @db.Decimal
  before_value          String?
  after_value           String?
  entry_function_id_str String?  @db.VarChar(1000)
  token_standard        String   @db.VarChar(10)
  is_fungible_v2        Boolean?
  transaction_timestamp DateTime @db.Timestamp(6)
  inserted_at           DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, event_index])
  @@index([from_address, type], map: "ta2_from_type_index")
  @@index([inserted_at], map: "ta2_insat_index")
  @@index([event_account_address, type], map: "ta2_owner_type_index")
  @@index([token_data_id], map: "ta2_tid_index")
  @@index([to_address, type], map: "ta2_to_type_index")
}

model token_datas {
  token_data_id_hash         String   @db.VarChar(64)
  transaction_version        BigInt
  creator_address            String   @db.VarChar(66)
  collection_name            String   @db.VarChar(128)
  name                       String   @db.VarChar(128)
  maximum                    Decimal  @db.Decimal
  supply                     Decimal  @db.Decimal
  largest_property_version   Decimal  @db.Decimal
  metadata_uri               String   @db.VarChar(512)
  payee_address              String   @db.VarChar(66)
  royalty_points_numerator   Decimal  @db.Decimal
  royalty_points_denominator Decimal  @db.Decimal
  maximum_mutable            Boolean
  uri_mutable                Boolean
  description_mutable        Boolean
  properties_mutable         Boolean
  royalty_mutable            Boolean
  default_properties         Json
  inserted_at                DateTime @default(now()) @db.Timestamp(6)
  collection_data_id_hash    String   @db.VarChar(64)
  transaction_timestamp      DateTime @db.Timestamp(6)
  description                String

  @@id([token_data_id_hash, transaction_version])
  @@index([creator_address, collection_name, name], map: "td_crea_cn_name_index")
  @@index([inserted_at], map: "td_insat_index")
}

model token_datas_v2 {
  transaction_version         BigInt
  write_set_change_index      BigInt
  token_data_id               String   @db.VarChar(66)
  collection_id               String   @db.VarChar(66)
  token_name                  String   @db.VarChar(128)
  maximum                     Decimal? @db.Decimal
  supply                      Decimal  @db.Decimal
  largest_property_version_v1 Decimal? @db.Decimal
  token_uri                   String   @db.VarChar(512)
  token_properties            Json
  description                 String
  token_standard              String   @db.VarChar(10)
  is_fungible_v2              Boolean?
  transaction_timestamp       DateTime @db.Timestamp(6)
  inserted_at                 DateTime @default(now()) @db.Timestamp(6)
  decimals                    BigInt   @default(0)

  @@id([transaction_version, write_set_change_index])
  @@index([collection_id, token_name], map: "td2_cid_name_index")
  @@index([token_data_id], map: "td2_id_index")
  @@index([inserted_at], map: "td2_insat_index")
}

model token_ownerships {
  token_data_id_hash      String   @db.VarChar(64)
  property_version        Decimal  @db.Decimal
  transaction_version     BigInt
  table_handle            String   @db.VarChar(66)
  creator_address         String   @db.VarChar(66)
  collection_name         String   @db.VarChar(128)
  name                    String   @db.VarChar(128)
  owner_address           String?  @db.VarChar(66)
  amount                  Decimal  @db.Decimal
  table_type              String?
  inserted_at             DateTime @default(now()) @db.Timestamp(6)
  collection_data_id_hash String   @db.VarChar(64)
  transaction_timestamp   DateTime @db.Timestamp(6)

  @@id([token_data_id_hash, property_version, transaction_version, table_handle])
  @@index([creator_address, collection_name, name], map: "to_crea_cn_name_index")
  @@index([inserted_at], map: "to_insat_index")
  @@index([owner_address], map: "to_owner_index")
}

model token_ownerships_v2 {
  transaction_version         BigInt
  write_set_change_index      BigInt
  token_data_id               String   @db.VarChar(66)
  property_version_v1         Decimal  @db.Decimal
  owner_address               String?  @db.VarChar(66)
  storage_id                  String   @db.VarChar(66)
  amount                      Decimal  @db.Decimal
  table_type_v1               String?  @db.VarChar(66)
  token_properties_mutated_v1 Json?
  is_soulbound_v2             Boolean?
  token_standard              String   @db.VarChar(10)
  is_fungible_v2              Boolean?
  transaction_timestamp       DateTime @db.Timestamp(6)
  inserted_at                 DateTime @default(now()) @db.Timestamp(6)
  non_transferrable_by_owner  Boolean?

  @@id([transaction_version, write_set_change_index])
  @@index([token_data_id], map: "to2_id_index")
  @@index([inserted_at], map: "to2_insat_index")
  @@index([owner_address], map: "to2_owner_index")
}

model token_properties_v2 {
  collection_id    String @db.VarChar(66)
  token_data_id    String @db.VarChar(66)
  property_key     String @db.VarChar(128)
  property_value   String @db.VarChar(255)
  last_txn_version BigInt

  @@id([token_data_id, property_key])
  @@index([collection_id, property_key, property_value], map: "token_properties_v2_kv_index")
}

model tokens {
  token_data_id_hash      String   @db.VarChar(64)
  property_version        Decimal  @db.Decimal
  transaction_version     BigInt
  creator_address         String   @db.VarChar(66)
  collection_name         String   @db.VarChar(128)
  name                    String   @db.VarChar(128)
  token_properties        Json
  inserted_at             DateTime @default(now()) @db.Timestamp(6)
  collection_data_id_hash String   @db.VarChar(64)
  transaction_timestamp   DateTime @db.Timestamp(6)

  @@id([token_data_id_hash, property_version, transaction_version])
  @@index([creator_address, collection_name, name], map: "token_crea_cn_name_index")
  @@index([inserted_at], map: "token_insat_index")
}

model transaction_size_info {
  transaction_version BigInt   @id
  size_bytes          BigInt
  inserted_at         DateTime @default(now()) @db.Timestamp(6)

  @@index([inserted_at], map: "tsi_insat_index")
}

model transactions {
  version               BigInt   @id
  block_height          BigInt
  hash                  String   @unique @db.VarChar(66)
  type                  String   @db.VarChar
  payload               Json?
  state_change_hash     String   @db.VarChar(66)
  event_root_hash       String   @db.VarChar(66)
  state_checkpoint_hash String?  @db.VarChar(66)
  gas_used              Decimal  @db.Decimal
  success               Boolean
  vm_status             String
  accumulator_root_hash String   @db.VarChar(66)
  num_events            BigInt
  num_write_set_changes BigInt
  inserted_at           DateTime @default(now()) @db.Timestamp(6)
  epoch                 BigInt
  payload_type          String?  @db.VarChar(50)

  @@index([epoch], map: "txn_epoch_index")
  @@index([inserted_at], map: "txn_insat_index")
}

model user_transactions {
  version                   BigInt   @id
  block_height              BigInt
  parent_signature_type     String   @db.VarChar(50)
  sender                    String   @db.VarChar(66)
  sequence_number           BigInt
  max_gas_amount            Decimal  @db.Decimal
  expiration_timestamp_secs DateTime @db.Timestamp(6)
  gas_unit_price            Decimal  @db.Decimal
  timestamp                 DateTime @db.Timestamp(6)
  entry_function_id_str     String   @db.VarChar(1000)
  inserted_at               DateTime @default(now()) @db.Timestamp(6)
  epoch                     BigInt

  @@unique([sender, sequence_number])
  @@index([epoch], map: "ut_epoch_index")
  @@index([inserted_at], map: "ut_insat_index")
  @@index([sender, sequence_number], map: "ut_sender_seq_index")
}

model write_set_changes {
  transaction_version      BigInt
  index                    BigInt
  hash                     String   @db.VarChar(66)
  transaction_block_height BigInt
  type                     String
  address                  String   @db.VarChar(66)
  inserted_at              DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, index])
  @@index([address, transaction_version(sort: Desc)], map: "wsc_addr_type_ver_index")
  @@index([inserted_at], map: "wsc_insat_index")
}

model write_set_size_info {
  transaction_version BigInt
  index               BigInt
  key_bytes           BigInt
  value_bytes         BigInt
  inserted_at         DateTime @default(now()) @db.Timestamp(6)

  @@id([transaction_version, index])
  @@index([inserted_at], map: "wsi_insat_index")
}
